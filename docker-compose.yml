version: "3.8"

services:
  influxdb:
    image: influxdb:2.0.7
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=p@ssw0rd
      - DOCKER_INFLUXDB_INIT_ORG=westmarchesdelacave
      - DOCKER_INFLUXDB_INIT_BUCKET=bucket0
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=t0ken
  grafana:
    image: grafana/grafana:main
    volumes:
      - ./wm-infra/modules/main/ansible/roles/westmarches/templates/grafana-dashboards.tpl.yml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
      - ./wm-infra/deploy/local/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
      - ./wm-infra/modules/main/ansible/roles/westmarches/files/grafana-dashboards:/var/lib/grafana/dashboards:ro
    links:
      - influxdb
    ports:
      - "3000:3000"
  telegraf:
    image: telegraf:1.18.3
    volumes:
      - ./wm-infra/deploy/local/telegraf.toml:/etc/telegraf/telegraf.conf:ro
      - foundry-logs:/logs/foundry
    links:
      - influxdb
  proxy:
    image: nginx:1.21.0
    volumes:
      - ./:/opt/project:ro
      - ./wm-infra/deploy/local/custom.nginx:/etc/nginx/conf.d/custom.conf:ro
      - ./wm-infra/deploy/local/rootCA.pem:/etc/ssl/private/rootCA.pem:ro
      - ./wm-infra/deploy/local/rootCA-key.pem:/etc/ssl/private/rootCA-key.pem:ro
    links:
      - foundry
      - api
      - website
    ports:
      - "0.0.0.0:8443:443"
    networks:
      default:
        aliases:
          - api.westmarches.localhost.lan
  website:
    build:
      context: wm-website
      dockerfile: dev.Dockerfile
    volumes:
      - ./:/opt/project:ro
      - ./wm-website:/var/www/html:ro
      - ./wm-infra/deploy/local/data/api/westmarches.db:/opt/data/api/westmarches.db
      - ./wm-infra/deploy/local/php.ini:/usr/local/etc/php/conf.d/zzz-custom.ini:ro
      - twig-cache:/var/cache/website
    links:
      - elasticsearch
    environment:
      - JWT_CERTIFICATE=/opt/project/wm-infra/deploy/local/jwt-private.pem
      - JWT_SHARED_KEY=${JWT_SHARED_KEY}
      - ADMIN_KEY=${API_ADMIN_KEY}
      - API_ENDPOINT=https://api.westmarches.localhost.lan:8443
      - PLAY_ENDPOINT=https://play.westmarches.localhost.lan:8443
      - WEB_ROOT=https://westmarches.localhost.lan:8443
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0
    volumes:
      - ./wm-infra/deploy/local/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    environment:
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=BUH8JVS2CJYK8HH22UI6-XIP
      - MINIO_ROOT_PASSWORD=tchtIVtvwW2EICkqzD4wh_KzdRcxVrJ9VmzB8NizmDTKH1Ra
    command: server /data
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
  foundry:
    build:
      context: foundry-extensible-plugin
      dockerfile: ../wm-infra/docker/foundry/Dockerfile
    environment:
      - TIMEZONE=Europe/Paris
      - CONTAINER_PRESERVE_CONFIG=true
      - FOUNDRY_WORLD=west-marches-de-la-cave
      - FOUNDRY_AWS_CONFIG=/data/Config/s3config.json
      - CONTAINER_PRESERVE_OWNER=/data/Data/modules/wm-foundry-module
      - FOUNDRY_ADMIN_KEY=atropos
      - API_ADMIN_KEY=${API_ADMIN_KEY}
    links:
      - api
      - elasticsearch
    volumes:
#      - /home/pgmillon/workspace/ishtanzar/foundryvtt-0.7.10/resources/app:/home/foundry/resources/app:ro
#      - /home/pgmillon/workspace/ishtanzar/foundryvtt-0.8.9/resources/app:/home/foundry/resources/app:ro
      - /home/pgmillon/workspace/ishtanzar/foundryvtt-9.269/resources/app:/home/foundry/resources/app:ro
#      - ./wm-infra/deploy/local/data/foundry/Data-8.x:/data/Data
      - ./wm-infra/deploy/local/data/foundry/Data-9.x:/data/Data
      - ./wm-infra/deploy/local/data/foundry/Config:/data/Config
      - ./wm-infra/deploy/local/extensible-config.json:/home/foundry/resources/extensible-config.json
      - foundry-logs:/data/Logs
      - ./foundry-extensible-plugin:/home/foundry/resources/foundry-extensible-plugin:ro
      - ./wm-foundry-module:/data/Data/modules/wm-foundry-module:ro
    command: ["/usr/local/bin/pm2-runtime", "/home/foundry/resources/foundry-extensible-plugin/pm2.config.js"]
    ports:
      - "30000:30000"
      - "9229:9229"
  management_api:
    build:
      context: wm-management-api/
      dockerfile: dev.Dockerfile
    volumes:
      - ./:/opt/project
      - /var/run/docker.sock:/var/run/docker.sock
    command: ["/usr/local/bin/pm2-runtime", "/opt/project/wm-management-api/pm2.config.js"]
    ports:
      - "5000:5000"
#      - "5678:5678" # VScode
    environment:
      - COMPOSE_FILES=/opt/project/docker-compose.yml
      - HTPASSWD_PATH=/opt/project/wm-management-api/test/resources/.htpasswd
      - FOUNDRY_DATA_PATH=/opt/project/wm-infra/deploy/local/data/foundry
      - FOUNDRY_ENDPOINT=http://foundry:30000
      - BACKUP_S3_BUCKET=backups
      - BACKUP_S3_ENDPOINT=http://minio:9000/
      - DISCORD_SECRET=${DISCORD_BOT_SECRET}
      - KANKA_TOKEN=${KANKA_TOKEN}
      - KANKA_CAMPAIGN=${KANKA_CAMPAIGN}
      - DATABASE_ENDPOINT=lightning:///opt/project/wm-infra/deploy/local/data/api/westmarches.db
      - INTENT_MODEL_DIR=/opt/project/wm-infra/deploy/local/data/api/intents
      - LOGGING_CONFIG=/opt/project/wm-infra/deploy/local/api-logging.yml
      - AWS_ACCESS_KEY_ID=BUH8JVS2CJYK8HH22UI6-XIP
      - AWS_SECRET_ACCESS_KEY=tchtIVtvwW2EICkqzD4wh_KzdRcxVrJ9VmzB8NizmDTKH1Ra
    links:
      - minio
      - foundry
  api:
    build:
      context: ./
      dockerfile: wm-api/dev.Dockerfile
    volumes:
      - ./:/opt/project
      - ./wm-infra/deploy/local/hexMap-config.mjs:/opt/hexmap/hexMap-config.mjs
      - ./wm-website/public/scripts/hexmap.mjs:/opt/hexmap/hexmap.mjs
    command: ["/usr/local/bin/pm2-runtime", "/opt/project/wm-api/pm2.config.cjs"]
    ports:
      - "3000:3000"
      - "9228:9228"
    links:
      - redis
    environment:
      - CONFIG_PATH=/opt/project/wm-infra/deploy/local/api-config.json
      - BASE_MAP=/opt/project/wm-infra/deploy/local/map_full.jpg
      - FOW_PATH=/opt/project/wm-infra/deploy/local/fow.jpg
      - FINAL_MAP=/opt/project/wm-infra/deploy/local/charted.jpg
      - WEB_ROOT=https://api.westmarches.localhost.lan:8443
      - ADMIN_KEY=${API_ADMIN_KEY}
      - DISCORD_BOT_SECRET=${DISCORD_BOT_SECRET}
      - DISCORD_BOT_PUBLIC_KEY=${DISCORD_BOT_PUBLIC_KEY}
      - DISCORD_OAUTH_CLIENT=${DISCORD_OAUTH_CLIENT}
      - DISCORD_OAUTH_SECRET=${DISCORD_OAUTH_SECRET}
      - KANKA_OAUTH_CLIENT=${KANKA_OAUTH_CLIENT}
      - KANKA_OAUTH_SECRET=${KANKA_OAUTH_SECRET}
      - JWT_SHARED_KEY=${JWT_SHARED_KEY}
      - KOFI_VERIFICATION=${KOFI_VERIFICATION}
  arena:
    image: mixmaxhq/arena:latest
    links:
      - redis
    volumes:
      - ./arena.json:/opt/arena/index.json
    ports:
      - "4567:4567"
  discordbot:
    build:
      context: ./
      dockerfile: wm-discord-bot/dev.Dockerfile
    links:
      - management_api
      - api
      - redis
    volumes:
      - ./:/opt/project
      - ./wm-infra/deploy/local/redbot-config.json:/root/.config/Red-DiscordBot/config.json
    environment:
      - TZ=Europe/Paris
      - MGMNT_API_SECRET=changeme
      - API_TOKEN=${API_ADMIN_KEY}
      - CONFIG_PATH=/opt/project/wm-infra/deploy/local/discordbot-config.json
      - DEFAULT_INTENTS_PATH=/opt/project/wm-infra/modules/main/ansible/roles/discordbot/files/default-intents.json
      - AWS_ACCESS_KEY_ID=${DISCORD_AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${DISCORD_AWS_SECRET_KEY}
      - AWS_DEFAULT_REGION=${DISCORD_AWS_REGION}
      - DISCORD_BOT_SECRET=${DISCORD_BOT_SECRET}
      - DISCORD_OWNER_ID=${DISCORD_OWNER_ID}
      - KANKA_TOKEN=${KANKA_TOKEN}
    command: ["/usr/local/bin/pm2-runtime", "/opt/project/wm-discord-bot/pm2.config.js"]
#    ports:
#      - "5679:5679" # VScode
  worker:
    build:
      context: ./
      dockerfile: wm-worker/dev.Dockerfile
    volumes:
      - ./:/opt/project
    links:
      - elasticsearch
      - api
      - redis
      - foundry
    environment:
      - CONFIG_PATH=/opt/project/wm-infra/deploy/local/worker-config.json
      - KANKA_TOKEN=${KANKA_TOKEN}
      - DISCORD_BOT_SECRET=${DISCORD_BOT_SECRET}
      - MGMNT_API_SECRET=changeme
      - API_TOKEN=${API_ADMIN_KEY}
      - PYTHONUNBUFFERED=1
    command: ["/usr/local/bin/pm2-runtime", "/opt/project/wm-worker/pm2.config.js"]
#    command:
#      - /usr/local/bin/python
#      - -m
#      - pydevd
#      - --port
#      - "5680"
#      - --client
#      - 172.17.0.1
#      - --file
#      - /opt/project/wm-worker/src/__main__.py
#      - kanka.live
  discordbot_workaround:
    build:
      context: ./
      dockerfile: wm-discord-workaround/dev.Dockerfile
    links:
      - management_api
    volumes:
      - ./:/opt/project
#      - ./wm-management-api-client:/opt/wm-management-api-client
    environment:
      - CONFIG_PATH=/opt/project/wm-infra/deploy/local/workaround-config.json
      - DISCORD_BOT_SECRET=${DISCORD_BOT_SECRET}
      - WM_API_SECRET=changeme
      - WM_API_ENDPOINT=http://management_api:5000
      - PYTHONUNBUFFERED=1
    command: ["/usr/local/bin/pm2-runtime", "/opt/project/wm-discord-workaround/pm2.config.js"]
  foundry_debugger:
    image: alpine/socat
    links:
      - foundry
    ports:
      - "9229:9229"
    command: tcp-listen:9229,fork,reuseaddr tcp-connect:foundry:9229
    profiles:
      - debug
volumes:
  foundry-logs:
  twig-cache: