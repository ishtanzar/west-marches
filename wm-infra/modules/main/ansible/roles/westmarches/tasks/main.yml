
- name: Create data path
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ westmarches_data_path }}/grafana"
    - "{{ westmarches_data_path }}/influxdb"
    - /opt/data/www/.well-known

- name: Template config files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - { src: custom.tpl.nginx, dest: "{{ westmarches_data_path }}/nginx-custom.conf" }
    - { src: custom-ssl.tpl.nginx, dest: "{{ westmarches_data_path }}/nginx-ssl.conf" }
    - { src: nginx-entrypoint.sh, dest: "{{ westmarches_data_path }}/nginx-entrypoint.sh" }
    - { src: docker-compose.tpl.yml, dest: "{{ westmarches_data_path }}/docker-compose.yml" }
    - { src: telegraf.tpl.toml, dest: "/etc/telegraf/telegraf.d/custom.conf" }
    - { src: grafana-datasources.tpl.yml, dest: "{{ westmarches_data_path }}/grafana/datasources.yml" }
    - { src: grafana-dashboards.tpl.yml, dest: "{{ westmarches_data_path }}/grafana/dashboards.yml" }

- ansible.builtin.file:
    path: "{{ westmarches_data_path }}/nginx-entrypoint.sh"
    mode: '0755'

- name: Upload compose env file
  ansible.builtin.copy:
    dest: "{{ westmarches_data_path }}/.env"
    content: "COMPOSE_PROJECT_NAME=west-marches"

- ansible.builtin.file:
    path: "{{ foundry_data_path }}/Config"
    state: directory

- name: Upload S3 config
  ansible.builtin.copy:
    dest: "{{ foundry_data_path }}/Config/s3config.json"
    content: "{{ foundry_s3_config | to_nice_json }}"
  
- name: Fetch foundry-extensible-plugin
  ansible.builtin.get_url:
    url: "{{ lookup('env', 'FOUNDRY_EXTENSIBLE_PLUGIN_URL')|default(extensible_plugin_url, True) }}"
    dest: "{{ westmarches_data_path }}/foundry-extensible-plugin.zip"
    url_username: "{{ lookup('env', 'GITHUB_USER') }}"
    url_password: "{{ lookup('env', 'GITHUB_PASSWORD') }}"
    force_basic_auth: yes
    timeout: 60
    force: yes
    
- ansible.builtin.file:
    path: "{{ westmarches_data_path }}/foundry-extensible-plugin"
    state: absent
    
- ansible.builtin.file:
    path: "{{ westmarches_data_path }}/foundry-extensible-plugin"
    state: directory
    
- name: Unarchive foundry-extensible-plugin
  ansible.builtin.unarchive:
    src: "{{ westmarches_data_path }}/foundry-extensible-plugin.zip"
    dest: "{{ westmarches_data_path }}/foundry-extensible-plugin"
    remote_src: yes

- ansible.builtin.file:
    path: "{{ westmarches_data_path }}/foundry-extensible-plugin.zip"
    state: absent

- name: Upload grafana dashboards
  ansible.builtin.copy:
    src: grafana-dashboards
    dest: "{{ westmarches_data_path }}/grafana/storage/dashboards"

- name: Template unit file
  ansible.builtin.template:
    src: westmarches.service
    dest: "/etc/systemd/system/westmarches.service"
    owner: root
    group: root
    mode: '0644'
  vars:
    compose_files:
      - "{{ foundry_data_path }}-compose.yml"
      - "{{ discordbot_data_path }}-compose.yml"
      - "{{ westmarches_data_path }}/docker-compose.yml"
  register: unit_file_status

- name: Reload Systemd
  ansible.builtin.systemd:
    name: westmarches.service
    enabled: true
    daemon_reload: true
  when: unit_file_status.changed

- name: Start unit
  ansible.builtin.systemd:
    name: westmarches.service
    state: started
    
- name: Install certbot snap
  community.general.snap:
    name: certbot
    classic: yes
    
- name: Wait for port 80 to become open on the host
  ansible.builtin.wait_for:
    port: 80
    delay: 10
    
- name: SSL certificate
  ansible.builtin.shell: "certbot certonly -n --agree-tos --email webmaster@ishtanzar.net --keep --webroot -w /opt/data/www/ -d {{ foundry_fqdn }}"

- name: Restart units
  ansible.builtin.systemd:
    name: "{{item}}"
    state: restarted
  loop:
    - westmarches.service
    - telegraf.service
