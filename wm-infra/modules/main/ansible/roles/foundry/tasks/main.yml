
- include_tasks: data_device.yml

- name: "Create {{ scw_data_device }} partition"
  community.general.parted:
    device: "{{ scw_data_device }}"
    number: 1
    fs_type: ext4
    state: present

- name: "Create a ext4 filesystem on {{ scw_data_device }}"
  community.general.filesystem:
    fstype: ext4
    dev: "{{ scw_data_device }}1"

- name: Mount point exists
  ansible.builtin.file:
    path: /opt/data
    state: directory

- name: "Mount {{ scw_data_device }}"
  ansible.posix.mount:
    path: /opt/data
    src: "{{ scw_data_device }}1"
    fstype: ext4
    state: mounted

- name: Create some paths
  ansible.builtin.file:
    path: "{{ foundry_data_path }}/{{ item }}"
    state: directory
    owner: 421
    group: 421
  loop:
    - container_cache
    - container_patches/resources
    - Data/systems
    - Data/modules
    - Config

- name: Fetch foundry
  amazon.aws.aws_s3:
    bucket: "{{ foundry_s3_bucket }}"
    object: "private/foundryvtt/{{ foundryvtt_zip }}"
    dest: "{{ foundry_data_path }}/container_cache/{{ foundryvtt_zip }}"
    region: eu-west-3
    aws_access_key: "{{ FOUNDRY_BUCKET_ACCESS_KEY_ID }}"
    aws_secret_key: "{{ FOUNDRY_BUCKET_SECRET_ACCESS_KEY }}"
    mode: get

- name: Fetch patch resources
  amazon.aws.aws_s3:
    bucket: "{{ foundry_s3_bucket }}"
    object: "private/foundryvtt/crack/{{ foundry_version }}/{{ item }}"
    dest: "{{ foundry_data_path }}/container_patches/resources/{{ item }}"
    region: eu-west-3
    aws_access_key: "{{ FOUNDRY_BUCKET_ACCESS_KEY_ID }}"
    aws_secret_key: "{{ FOUNDRY_BUCKET_SECRET_ACCESS_KEY }}"
    mode: get
  ignore_errors: yes
  loop:
    - auth.js
    - init.js
    
- name: Upload patches
  ansible.builtin.copy:
    src: patches/custom.sh
    dest: "{{ foundry_data_path }}/container_patches/"

- name: Upload default intents
  ansible.builtin.copy:
    src: default-intents.json
    dest: "{{ foundry_data_path }}/default-intents.json"

- name: Manager API htpasswd file
  community.general.htpasswd:
    name: foundry_manager
    password: "{{ management_api_secret }}"
    path: "{{ foundry_data_path }}/.htpasswd"

- name: Pull Docker images
  community.docker.docker_image:
    name: "{{ item }}"
    source: pull
    force_source: true
  loop:
    - "{{ foundry_docker_image }}"
    - "{{ management_api_docker_image }}"

- name: Template docker-compose file
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - { src: docker-compose.tpl.yml, dest: "{{ foundry_data_path }}-compose.yml" }
    - { src: api-logging.tpl.yml, dest: "{{ foundry_data_path }}/api-logging.yml" }
    - { src: secrets.tpl.json, dest: "{{ foundry_data_path }}/secrets.json" }

- name: Install modules
  include_tasks: module_install.yml
  loop: "{{ foundry_modules }}"
  loop_control:
    loop_var: module